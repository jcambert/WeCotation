using System;
using System.Collections.Generic;

using WeCotation.domain.Tarifs.Domain;

using WeCotation.domain.Nomenclatures.Domain;

using WeCotation.domain.Operations.Domain;
using MongoDB.Bson.Serialization.Attributes;
using System.Linq;

/// <summary>
/// This file was generated by the yeoman generator "generator-micros"
/// @author: Ambert Jean-Christophe
/// @email: jc.ambert@free.fr
/// @created_on: Wed May 13 2020 11:51:54 GMT+0200 (GMT+02:00)
/// </summary>
namespace WeCotation.domain.Articles.Dto
{
    public partial class ArticleDto
    {

        #region private variables

        private ISet<Tarif> _Tarif;

        private ISet<Nomenclature> _Nomenclature;

        private ISet<Operation> _Operation;

        #endregion

        #region public properties

        public Guid Id { get; set; }


        public string Code { get; set; }

        public string Designation { get; set; }
        [BsonIgnore]
        public string Indice { get; set; }
        [BsonIgnore]
        public string Plan { get; set; }

        public float Prix { get; set; }

        public float Densite { get; set; }

        public int TxPrep { get; set; }

        public int TxOpe { get; set; }

        public float TpPrep { get; set; }

        public float TpOpe { get; set; }

        public float TpBase { get; set; }

        public string Type { get; set; }

        [BsonIgnoreIfNull]
        public IEnumerable<Tarif> Tarifs
        {
            get => _Tarif;
            set => _Tarif =new HashSet<Tarif>(value);
        }
        [BsonIgnoreIfNull]
        public IEnumerable<Nomenclature> Nomenclatures
        {
            get => _Nomenclature;
            set => _Nomenclature = new HashSet<Nomenclature>(value);
        }
        [BsonIgnoreIfNull]
        public IEnumerable<Operation> Operations
        {
            get => _Operation;
            set => _Operation = new HashSet<Operation>(value);
        }

        #endregion


    }
}
