#region using
using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using MicroS_Common.Types;
using MicroS_Common.Controllers;
using MicroS_Common.Dispatchers;
using WeCotation.domain.Articles.Dto;
using WeCotation.domain.Articles.Queries;
using MicroS_Common.Redis;
using System.Linq.Expressions;
using WeCotation.domain.Articles.Messages.Commands;
using MicroS_Common.Mvc;
using Microsoft.Extensions.Configuration;
#endregion

/// <summary>
/// This file was generated by the yeoman generator "generator-micros"
/// @author: Ambert Jean-Christophe
/// @email: jc.ambert@free.fr
/// @created_on: Wed May 13 2020 11:51:54 GMT+0200 (GMT+02:00)
/// </summary>
namespace WeCotation.Services.Articles.Controllers
{
    [Route("articles")]
    public partial class ArticlesController : BaseController
    {
        public ArticlesController(IDispatcher dispatcher,IConfiguration config) : base(dispatcher,config)
        {
            
        }
        [Cached]
        [HttpGet("")]
        public async Task<ActionResult<PagedResult<ArticleDto>>> Get([FromQuery] BrowseArticles query)
            => Collection(await QueryAsync(query));

        [Cached]
        [HttpGet("{id}")]
        public async Task<ActionResult<ArticleDto>> Get([FromRoute] GetArticle query)
            => Single(await QueryAsync(query));

        [HttpPost]
        public async Task<ActionResult> Post(CreateArticle command)
        {
            await Dispatcher.SendAsync(command.BindId(c => c.Id));

            return Accepted();
        }
    }
}